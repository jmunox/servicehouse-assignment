/**
 * NOTE: This class is auto generated by the swagger code generator program (2.3.1).
 * https://github.com/swagger-api/swagger-codegen
 * Do not edit the class manually.
 */
package io.swagger.api;

import io.swagger.model.MeterReading;
import io.swagger.annotations.*;
import org.springframework.http.ResponseEntity;
import org.springframework.validation.annotation.Validated;
import org.springframework.web.bind.annotation.PathVariable;
import org.springframework.web.bind.annotation.RequestBody;
import org.springframework.web.bind.annotation.RequestHeader;
import org.springframework.web.bind.annotation.RequestMapping;
import org.springframework.web.bind.annotation.RequestMethod;
import org.springframework.web.bind.annotation.RequestParam;
import org.springframework.web.bind.annotation.RequestPart;
import org.springframework.web.multipart.MultipartFile;

import javax.validation.Valid;
import javax.validation.constraints.*;
import java.util.List;
@javax.annotation.Generated(value = "io.swagger.codegen.languages.SpringCodegen", date = "2018-09-03T16:56:55.966Z")

@Api(value = "meter", description = "the meter API")
public interface MeterApi {

    @ApiOperation(value = "", nickname = "createMeterReading", notes = "Add the fraction for Given Profile and Month", tags={ "meterReading", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid Month OR MeterReading"),
        @ApiResponse(code = 404, message = "Profile Not Found") })
    @RequestMapping(value = "/meter/{meterID}/{profile}/{month}",
        produces = { "application/json" }, 
        method = RequestMethod.PUT)
    ResponseEntity<Void> createMeterReading(@ApiParam(value = "Unique ID of the Meter", required = true) @PathVariable("meterID") String meterID, @ApiParam(value = "Profile Id", required = true) @PathVariable("profile") String profile, @ApiParam(value = "Month of the Year", required = true, allowableValues = "JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC") @PathVariable("month") String month, @NotNull @ApiParam(value = "The MeterReading for the given meterID, profile and month", required = true) @Valid @RequestParam(value = "meterReading", required = true) Float meterReading);


    @ApiOperation(value = "", nickname = "deleteMeterReading", notes = "Delete the MeterReading for a Given MeterID, Profile and Month", tags={ "meterReading", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK"),
        @ApiResponse(code = 400, message = "Invalid Month"),
        @ApiResponse(code = 404, message = "NOT FOUND") })
    @RequestMapping(value = "/meter/{meterID}/{profile}/{month}",
        produces = { "application/json" }, 
        method = RequestMethod.DELETE)
    ResponseEntity<Void> deleteMeterReading(@ApiParam(value = "Unique ID of the Meter", required = true) @PathVariable("meterID") String meterID, @ApiParam(value = "Profile Id", required = true) @PathVariable("profile") String profile, @ApiParam(value = "Month of the Year", required = true, allowableValues = "JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC") @PathVariable("month") String month);


    @ApiOperation(value = "", nickname = "getMeterReading", notes = "Get the MeterReading for Given MeterID, Profile and Month", response = MeterReading.class, tags={ "meterReading", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MeterReading.class),
        @ApiResponse(code = 400, message = "Invalid Profile OR Month"),
        @ApiResponse(code = 404, message = "NOT FOUND") })
    @RequestMapping(value = "/meter/{meterID}/{profile}/{month}",
        produces = { "application/json" }, 
        method = RequestMethod.GET)
    ResponseEntity<MeterReading> getMeterReading(@ApiParam(value = "Unique ID of the Meter", required = true) @PathVariable("meterID") String meterID, @ApiParam(value = "Profile Id", required = true) @PathVariable("profile") String profile, @ApiParam(value = "Month of the Year", required = true, allowableValues = "JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC") @PathVariable("month") String month);


    @ApiOperation(value = "", nickname = "updateMeterReading", notes = "Update the MeterReading for Given MeterID, Profile and Month", response = MeterReading.class, tags={ "meterReading", })
    @ApiResponses(value = { 
        @ApiResponse(code = 200, message = "OK", response = MeterReading.class),
        @ApiResponse(code = 400, message = "Invalid Profile OR Month"),
        @ApiResponse(code = 404, message = "Profile/Fraction data not found") })
    @RequestMapping(value = "/meter/{meterID}/{profile}/{month}",
        produces = { "application/json" }, 
        method = RequestMethod.POST)
    ResponseEntity<MeterReading> updateMeterReading(@ApiParam(value = "Unique ID of the Meter", required = true) @PathVariable("meterID") String meterID, @ApiParam(value = "Profile Id", required = true) @PathVariable("profile") String profile, @ApiParam(value = "Month of the Year", required = true, allowableValues = "JAN, FEB, MAR, APR, MAY, JUN, JUL, AUG, SEP, OCT, NOV, DEC") @PathVariable("month") String month, @NotNull @ApiParam(value = "The MeterReading for the given meterID, profile and month", required = true) @Valid @RequestParam(value = "meterReading", required = true) Float meterReading);

}
